"""Деревья"""
""" Программа содержит цикл создания и вывода деревьев, содержащих числа"""


import random

# Создание дерева
def create_nodes(grade):
    # Здесь grade - степень глубины узла в дереве, глубина 0 означает, что узел дерева - листок
    if grade == 0:
        # Тогда нужно вернуть лист - число
        return random.randint(-55,77)
    # Если заданная степень больше нуля, нужно создать список дочерних веток
    nodes = []
    if grade > 0:
        # И наполнить список узлами со степенью, меньшей на 1
        for i in range (random.randint(1,5)):
            nodes.append(create_nodes(grade-1))
    # После можно уже возвращать созданный узел с его потомками
    return nodes


# Вывод дерева
def print_tree(tree,dep=0):
    # Проверка на факт соответствия типа значения узла целочисленному(узел - лист?)
    if isinstance(tree, int):
        # Поскольку это находится на определенной глубине, нужно напечатать отступы столько раз, сколько есть степень
        for i in range(0,dep):
            print("\t", end='')
        # После чего можно уже вывести знак, означающий соответствие узла листку
        print("├── " + str(tree))
    # Если же нет(из узла происходят ветки), то надо вывести знак и погрузиться далее
    else:

        for i in range(0,dep):
            print("\t", end='')
        print('└──')
        # Увеличение степени погружения
        dep += 1
        # Вывод всех узлов дерева
        for i in range(0, len(tree)):
            print_tree(tree[i], dep)
    pass


mytree = create_nodes(4)
print(mytree)
print_tree(mytree)
